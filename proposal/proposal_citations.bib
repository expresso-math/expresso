
@techreport{smithies_handwriting-based_1999,
	address = {Dunedin, New Zealand},
	title = {A Handwriting-Based Equation Editor},
	abstract = {Current equation editing systems rely on either textbased equation description languages or on interactive construction by means of structure templates and menus. These systems are often tedious to use, even for experts, because the user is forced to "parse" the expressions mentally before they are entered. This step is not normally part of the process of writing equations on paper or on a whiteboard. We describe a prototype equation editor that is based on handwriting recognition and automatic equation parsing. It is coupled with a user interface that incorporates a set of simple procedures for correcting errors made by the automatic interpretation. Although some correction by the user is typically necessary before the formula is recognized, we have found that the system is simpler and more natural to use than systems based on specialized languages or template-based interaction.},
	institution = {Department of Computer Science, University of Otago},
	author = {Smithies, Steve and Novins, Kevin and Arvo, James},
	year = {1999},
	file = {Citeseer - Full Text PDF:/Users/josefdlange/Library/Application Support/Zotero/Profiles/erjqq4pe.default/zotero/storage/EED3VEJS/Smithies and al - 1999 - A Handwriting-Based Equation Editor.pdf:application/pdf;Citeseer - Snapshot:/Users/josefdlange/Library/Application Support/Zotero/Profiles/erjqq4pe.default/zotero/storage/E38AT7GG/summary.html:text/html}
},

@techreport{smirnova_pen-based_2006,
	address = {London, {ON}, Canada},
	type = {Tech Report},
	title = {A pen-based mathematical environment Mathink},
	abstract = {In this work we address the problem of how pen-based interfaces for mathematical software systems can be organized. We describe our approach to such interfaces for mathematical packages and document processing software. Our architecture includes components for ink collection, mathematically-oriented recognizers, portability support and interfaces to applications. We summarize aspects of mathematical handwriting recognition and discuss the methods we have used for individual character recognition and overall expression analysis. We present our pen-based computing environment Mathink and give an overview of facilities for training, ink annotation, and testing. 1},
	institution = {Ontario Research Centre for Computer Algebra, The University of Western Ontario,},
	author = {Smirnova, Elena and Watt, Stephen M.},
	year = {2006},
	file = {Citeseer - Full Text PDF:/Users/josefdlange/Library/Application Support/Zotero/Profiles/erjqq4pe.default/zotero/storage/55VGSUD3/Smirnova and Watt - 2006 - A pen-based mathematical environment Mathink.pdf:application/pdf;Citeseer - Snapshot:/Users/josefdlange/Library/Application Support/Zotero/Profiles/erjqq4pe.default/zotero/storage/RQVXBUIK/summary.html:text/html}
},

@phdthesis{levin_cellwriter:_2007,
	address = {Minneapolis, {MN}, {USA}},
	title = {{CellWriter:} Grid-Entry Handwriting Recognition},
	abstract = {{CellWriter} is an open source handwriting input panel for the X Window System. Rather than specializing in recognizing a single language or group of languages, Cell- Writer relies on entry via a grid interface and robust character recognition to provide naturally multilingual handwriting recognition capacity. Elastic matching augmented with a greedy mapping algorithm to account for variability provide the underlying recognition mechanism. This paper describes the design decisions, algorithms devel- oped for, and issues surrounding the program.},
	school = {University of Minnesota},
	author = {Levin, Michael},
	year = {2007}
},

@techreport{chan_mathematical_2000,
	address = {Clear Water Bay, Kowloon, Hong Kong},
	title = {Mathematical Expression Recognition: A Survey},
	shorttitle = {Mathematical Expression Recognition},
	abstract = {. Automatic recognition of mathematical expressions is one of the key vehicles in the drive towards transcribing documents in scientific and engineering disciplines into electronic form. This problem typically consists of two major stages, namely, symbol recognition and structural analysis. In this survey paper, we will review most of the existing work with respect to each of the two major stages of the recognition process. In particular, we try to put emphasis on the similarities and differences between systems. Moreover, some important issues in mathematical expression recognition will be addressed in depth. All these together serve to provide a clear overall picture of how this research area has been developed to date.  Key words: error detection and correction -- mathematical expression recognition -- performance evaluation -- structural analysis -- symbol recognition  1},
	institution = {Department of Computer Science, The Hong Kong University of Science and Technology},
	author = {Chan, Kam-Fai and Yeung, Dit-Yan},
	year = {2000},
	file = {Citeseer - Full Text PDF:/Users/josefdlange/Library/Application Support/Zotero/Profiles/erjqq4pe.default/zotero/storage/VGPRRQ23/Chan and Yeung - 2000 - Mathematical Expression Recognition A Survey.pdf:application/pdf;Citeseer - Snapshot:/Users/josefdlange/Library/Application Support/Zotero/Profiles/erjqq4pe.default/zotero/storage/3BJG5NB2/summary.html:text/html}
},

@phdthesis{matsakis_recognition_1999,
	address = {Cambridge, {MA}, {USA}},
	title = {Recognition of Handwritten Mathematical Expressions},
	abstract = {In recent years, the recognition of handwritten mathematical expressions has re- cieved an increasing amount of attention in pattern recognition research. The di- versity of approaches to the problem and the lack of a commercially viable system, however, indicate that there is still much research to be done in this area. In this thesis, I will describe an on-line approach for converting a handwritten mathemat- ical expression into an equivalent expression in a typesetting command language such as {TEX} or {MathML}, as well as a feedback-oriented user interface which can make errors more tolerable to the end user since they can be quickly corrected.
The three primary components of this system are a method for classifying iso- lated handwritten symbols, an algorithm for partitioning an expression into sym- bols, and an algorithm for converting a two-dimensional arrangements of symbols into a typeset expression. For symbol classification, a Gaussian classifier is used to rank order the interpretations of a set of strokes as a single symbol. To partition an expression, the values generated by the symbol classifier are used to perform a constrained search of possible partitions for the one with the minimum summed cost. Finally, the expression is parsed using a simple geometric grammar.},
	school = {Massachusetts Institute of Technology},
	author = {Matsakis, Nicholas E.},
	year = {1999},
	file = {Citeseer - Full Text PDF:/Users/josefdlange/Library/Application Support/Zotero/Profiles/erjqq4pe.default/zotero/storage/PMARNG4K/Matsakis et al. - 1999 - Recognition of Handwritten Mathematical Expression.pdf:application/pdf;Citeseer - Snapshot:/Users/josefdlange/Library/Application Support/Zotero/Profiles/erjqq4pe.default/zotero/storage/8RADNHTH/summary.html:text/html}
},

@inproceedings{blostein_user_2002,
	title = {User Interfaces for On-line Diagram Recognition},
	abstract = {this paper,  we discuss some of the many research questions related to user interfaces  in diagram recognition systems. We relate experiences we have gathered  during the construction of two on-line diagram recognition systems, one  for {UML} (Unified Modeling Language) notation and the other for  mathematical notation. The goal of this paper is to encourage  discussion. The graphics recognition community needs strategies and  criteria for designing, implementing, and evaluating user interfaces},
	booktitle = {Lecture Notes in Computer Science 2390},
	publisher = {Springer-Verlag},
	author = {Blostein, Dorothea and Lank, Ed and Rose, Arlis and Zanibbi, Richard},
	year = {2002},
	pages = {92â€“103},
	file = {Citeseer - Full Text PDF:/Users/josefdlange/Library/Application Support/Zotero/Profiles/erjqq4pe.default/zotero/storage/MUKT4U3M/Blostein et al. - 2002 - User Interfaces for On-line Diagram Recognition.pdf:application/pdf;Citeseer - Snapshot:/Users/josefdlange/Library/Application Support/Zotero/Profiles/erjqq4pe.default/zotero/storage/CZ2HD6HW/summary.html:text/html}
}